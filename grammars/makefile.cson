'scopeName': 'source.makefile'
'name': 'Makefile'
'fileTypes': [
  'Makefile'
  'makefile'
  'BSDmakefile'
  'GNUmakefile'
  'OCamlMakefile'
  'Kbuild'
  'mf'
  'mk'
  'mkfile'
  'Makefile.in'
  'imk'
]
'firstLineMatch': '^#!\\s*/.*\\bmake\\s+-f'
'patterns': [
  {
    'include': '#directive'
  }
  {
    'include': '#comment'
  }
  {
    'include': '#variable-assignment'
  }
  {
    'include': '#rule'
  }
  {
    'include': '#recipe'
  }
]
'repository':
  'comment':
    'begin': '#'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.comment.makefile'
    'contentName': 'comment.line.number-sign.makefile'
    'end': '(?=\\n)'
    'patterns': [
      {
        'include': '#line-continuation'
      }
    ]
  'directive':
    'patterns': [
      {
        'begin': '^\\s*([s\\-]?include)\\b'
        'beginCaptures':
          '1':
            'name': 'keyword.control.include.makefile'
        'end': '(?=\\n)'
        'patterns': [
          {
            'include': '#comment'
          }
          {
            'include': '#variable'
          }
          {
            'match': '%'
            'name': 'constant.other.placeholder.makefile'
          }
        ]
      }
      {
        'begin': '^\\s*(vpath)\\b'
        'beginCaptures':
          '1':
            'name': 'keyword.control.vpath.makefile'
        'end': '(?=\\n)'
        'patterns': [
          {
            'include': '#comment'
          }
          {
            'include': '#variable'
          }
          {
            'match': '%'
            'name': 'constant.other.placeholder.makefile'
          }
        ]
      }
      {
        'begin': '^(?:(override)\\s*)?(define)\\s*([^\\s]+)\\s*(=|\\?=|:=|\\+=)?(?=\\s)'
        'captures':
          '1':
            'name': 'keyword.control.override.makefile'
          '2':
            'name': 'keyword.control.define.makefile'
          '3':
            'name': 'variable.other.makefile'
          '4':
            'name': 'punctuation.separator.key-value.makefile'
        'end': '^\\s*(endef)\\b'
        'name': 'meta.scope.conditional.makefile'
        'patterns': [
          {
            'begin': '\\G(?!\\n)'
            'end': '(?=\\n)'
            'patterns': [
              {
                'include': '#comment'
              }
            ]
          }
          {
            'include': '#variable'
          }
          {
            'include': '#comment'
          }
        ]
      }
      {
        'begin': '^\\s*(export)\\b'
        'beginCaptures':
          '1':
            'name': 'keyword.control.$1.makefile'
        'end': '(?=\\n)'
        'patterns': [
          {
            'include': '#comment'
          }
          {
            'include': '#variable-assignment'
          }
          {
            'match': '[^\\s]+'
            'name': 'variable.other.makefile'
          }
        ]
      }
      {
        'begin': '^\\s*(override|private)\\b'
        'beginCaptures':
          '1':
            'name': 'keyword.control.$1.makefile'
        'end': '(?=\\n)'
        'patterns': [
          {
            'include': '#comment'
          }
          {
            'include': '#variable-assignment'
          }
        ]
      }
      {
        'begin': '^\\s*(unexport|undefine)\\b'
        'beginCaptures':
          '1':
            'name': 'keyword.control.$1.makefile'
        'end': '(?=\\n)'
        'patterns': [
          {
            'include': '#comment'
          }
          {
            'match': '[^\\s]+'
            'name': 'variable.other.makefile'
          }
        ]
      }
      {
        'begin': '^\\s*(ifdef|ifndef)\\s*([^\\s]+)(?=\\s)'
        'captures':
          '1':
            'name': 'keyword.control.$1.makefile'
          '2':
            'name': 'variable.other.makefile'
          '3':
            'name': 'punctuation.separator.key-value.makefile'
        'end': '^\\s*(endif)\\b'
        'name': 'meta.scope.conditional.makefile'
        'patterns': [
          {
            'begin': '\\G(?!\\n)'
            'end': '(?=\\n)'
            'patterns': [
              {
                'include': '#comment'
              }
            ]
          }
          {
            # TODO: suport "else if..." style
            'begin': '^\\s*else(?=\\s)'
            'beginCaptures':
              '0':
                'name': 'keyword.control.else.makefile'
            'end': '(?=\\n)'
          }
          {
            'include': '$self'
          }
        ]
      }
      {
        'begin': '^\\s*(ifeq|ifneq)(?=\\s)'
        'captures':
          '1':
            'name': 'keyword.control.$1.makefile'
        'end': '^\\s*(endif)\\b'
        'name': 'meta.scope.conditional.makefile'
        'patterns': [
          {
            'begin': '\\G'
            'end': '(?=\\n)'
            'name': 'meta.scope.condition.makefile'
            'patterns': [
              {
                'include': '#variable'
              }
              {
                'include': '#comment'
              }
            ]
          }
          {
            # TODO: suport "else if..." style
            'begin': '^\\s*else(?=\\s)'
            'beginCaptures':
              '0':
                'name': 'keyword.control.else.makefile'
            'end': '(?=\\n)'
          }
          {
            'include': '$self'
          }
        ]
      }
    ]
  'line-continuation':
    'match': '\\\\\\n'
    'name': 'constant.character.escape.continuation.makefile'
  'rule':
    # TODO: Handle static-pattern rules (:)?
    # TODO: Handle order-only prerequisites (|)?
    'begin': '^(?![ \\t])([^:]+)(:)'
    'beginCaptures':
      '1':
        'name': 'meta.scope.target.entity.name.function.makefile'
        'patterns': [
          {
            'match': '\\.(PHONY|SUFFIXES|DEFAULT|PRECIOUS|INTERMEDIATE|SECONDARY|SECONDEXPANSION|DELETE_ON_ERROR|IGNORE|LOW_RESOLUTION_TIME|SILENT|EXPORT_ALL_VARIABLES|NOTPARALLEL|ONESHELL|POSIX)'
            'captures':
              '1':
                'name': 'support.function.target.$1.makefile'
          }
          {
            'include': '#variable'
          }
          {
            'match': '%'
            'name': 'constant.other.placeholder.makefile'
          }
        ]
    'end': '(?=\\n)'
    'patterns': [
      {
          'begin': '(;)'
          'captures':
            '1':
              'name': 'punctuation.separator.rule-recipe.makefile'
          'end': '(?=\\n)'
          'patterns': [
            {
              'include': '#recipe'
            }
          ]
      }
      {
        'include': '#line-continuation'
      }
      {
        'include': '#comment'
      }
    ]
  'recipe':
    'begin': '(\\G|^\\t)(@?)'
    'beginCaptures':
      '1':
        'name': 'punctuation.whitespace.recipe.leading.makefile'
      '2':
        'name': 'constant.character.silent.makefile'
    'end': '(?=\\n)'
    'name': 'meta.scope.recipe.makefile'
    'patterns': [
      {
        'include': '#comment'
      }
      {
        'include': '#line-continuation'
      }
      {
        'include': '#variable'
      }
      {
        'match': '%|\\*'
        'name': 'constant.other.placeholder.makefile'
      }
      {
        'include': '#string'
      }
    ]
  # 'xrecipe':
  #   'begin': '^(?!\\t)([^:]*)(:)(?!\\=)'
  #   'beginCaptures':
  #     '1':
  #       'patterns': [
  #         {
  #           'captures':
  #             '1':
  #               'name': 'support.function.target.$1.makefile'
  #           'match': '^\\s*(\\.(PHONY|SUFFIXES|DEFAULT|PRECIOUS|INTERMEDIATE|SECONDARY|SECONDEXPANSION|DELETE_ON_ERROR|IGNORE|LOW_RESOLUTION_TIME|SILENT|EXPORT_ALL_VARIABLES|NOTPARALLEL|ONESHELL|POSIX))\\s*$'
  #         }
  #         {
  #           'begin': '(?=\\S)'
  #           'end': '(?=\\s|$)'
  #           'name': 'entity.name.function.target.makefile'
  #           'patterns': [
  #             {
  #               'include': '#variable'
  #             }
  #             {
  #               'match': '%'
  #               'name': 'constant.other.placeholder.makefile'
  #             }
  #           ]
  #         }
  #       ]
  #     '2':
  #       'name': 'punctuation.separator.key-value.makefile'
  #   'end': '^(?!\\t)'
  #   'name': 'meta.scope.target.makefile'
  #   'patterns': [
  #     {
  #       'begin': '\\G'
  #       'end': '\\n'
  #       'name': 'meta.scope.prerequisites.makefile'
  #       'patterns': [
  #         {
  #           'include': '#line-continuation'
  #         }
  #         {
  #           'match': '%|\\*'
  #           'name': 'constant.other.placeholder.makefile'
  #         }
  #         {
  #           'include': '#comment'
  #         }
  #         {
  #           'include': '#variable'
  #         }
  #       ]
  #     }
  #     {
  #       'begin': '^\\t'
  #       'end': '$'
  #       'name': 'meta.scope.recipe.makefile'
  #       'patterns': [
  #         {
  #           'include': '#line-continuation'
  #         }
  #         {
  #           'include': '#variable'
  #         }
  #         {
  #           'include': 'source.shell'
  #         }
  #       ]
  #     }
  #   ]
  'variable-assignment':
    'begin': '(^\\s*|\\G\\s*)([^\\s]+)\\s*(=|\\?=|:=|\\+=)'
    'beginCaptures':
      '2':
        'name': 'variable.other.makefile'
      '3':
        'name': 'punctuation.separator.key-value.makefile'
    'end': '(?=\\n)'
    'patterns': [
      {
        'include': '#line-continuation'
      }
      {
        'include': '#comment'
      }
      {
        'include': '#variable'
      }
      # {
      #  'include': '#interpolation'
      # }
      {
        'include': '#string'
      }
    ]
  'variable-name':
    'patterns': [
      {
        'match': '\\G(MAKE(FILES|SHELL|LEVEL|FLAGS|CMDGOALS|FILE_LIST|_RESTARTS|_TERMOUT|_TERMERR)?|VPATH|SHELL|\\.SHELLFLAGS|CURDIR|SUFFIXES|\\.LIBPATTERNS|\\.DEFAULT_GOAL|\\.RECIPEPREFIX|\\.VARIABLES|\\.FEATURES|\\.INCLUDE_DIRS)'
        'name': 'variable.language.makefile'
      }
      {
        'match': '\\G\\w+'
        'name': 'variable.other.makefile'
      }
    ]
  'variable':
    'patterns': [
      {
        'match': '\\$\\$'
        'name':'constant.character.escape.dollar-sign.makefile'
      }
      {
        # automatic variables
        'match': '\\$[@%<?^+|*]'
        'name':'variable.language.makefile'
      }
      {
        'begin': '\\$\\('
        'captures':
          '0':
            'name': 'punctuation.definition.variable.makefile'
        'end': '\\)'
        'patterns': [
          {
            # automatic variable alternates
            'match': '\\G([@*%<^+?][DF])'
            'name': 'variable.language.makefile'
          }
          {
            'begin': '\\G(subst|patsubst|strip|findstring|filter(-out)?|sort|word(list|s)?|firstword|lastword|dir|notdir|suffix|basename|addsuffix|addprefix|join|wildcard|realpath|abspath|if|or|and|foreach|file|call|value|eval|origin|flavor|error|warning|info|shell|guile)\\s'
            'beginCaptures':
              '1':
                'name': 'support.function.$1.makefile'
            'contentName': 'string.implied.makefile'
            'end': '(?=\\))'
            'name': 'meta.scope.function-call.makefile'
            'patterns': [
              {
                'include': '#variable'
              }
              {
                'include': '#string'
              }
              {
                'match': '%|\\*'
                'name': 'constant.other.placeholder.makefile'
              }
            ]
          }
          {
            'include': '#variable-name'
          }
        ]
      }
      {
        'begin': '\\$\\{'
        'captures':
          '0':
            'name': 'punctuation.definition.variable.makefile'
        'end': '\\}'
        'patterns': [
          {
            # automatic variable alternates
            'match': '\\G([@*%<^+?][DF])'
            'name': 'variable.language.makefile'
          }
          {
            'begin': '\\G(subst|patsubst|strip|findstring|filter(-out)?|sort|word(list|s)?|firstword|lastword|dir|notdir|suffix|basename|addsuffix|addprefix|join|wildcard|realpath|abspath|if|or|and|foreach|file|call|value|eval|origin|flavor|error|warning|info|shell|guile)\\s'
            'beginCaptures':
              '1':
                'name': 'support.function.$1.makefile'
            'contentName': 'string.implied.makefile'
            'end': '(?=\\})'
            'name': 'meta.scope.function-call.makefile'
            'patterns': [
              {
                'include': '#variable'
              }
              {
                'include': '#string'
              }
              {
                'match': '%|\\*'
                'name': 'constant.other.placeholder.makefile'
              }
            ]
          }
          {
            'include': '#variable-name'
          }
        ]
      }
      {
        'begin': '\\$(?=\\w)'
        'captures':
          '0':
            'name': 'punctuation.definition.variable.makefile'
        'end': '(?=\\W)'
        'patterns': [
          {
            'include': '#variable-name'
          }
        ]
      }
    ]
  'string':
    'patterns': [
      {
        'begin': '"'
        'end': '"'
        'name': 'string.quoted.double.makefile'
        'patterns': [
          {
            'include': '#variable'
          }
        ]
      }
      {
        'begin': "'"
        'end': "'"
        'name': 'string.quoted.single.makefile'
        'patterns': [
          {
            'include': '#variable'
          }
        ]
      }
    ]
